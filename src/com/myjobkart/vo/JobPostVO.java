package com.myjobkart.vo;

// Generated 12 Feb, 2015 11:30:57 AM by Hibernate Tools 4.0.0

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.search.annotations.Analyze;
import org.hibernate.search.annotations.DateBridge;
import org.hibernate.search.annotations.Field;
import org.hibernate.search.annotations.Index;
import org.hibernate.search.annotations.Indexed;
import org.hibernate.search.annotations.Resolution;
import org.hibernate.search.annotations.Store;

/**
 * JobPosting generated by hbm2java
 */

@Entity
@Indexed
@Table(name = "job_posting")
public class JobPostVO extends BasicEntity {

	/**
	 * 
	 */
	private static final long serialVersionUID = -5010701595508386444L;

	private long jobId;
	private EmployerLoginVO employerLogin;
	private EmployerProfileVO employerProfileVO;
	
	
	private String address;
	private String companyName;
	private long companyId;

	private String contactPerson;
	private Long contactNo;
	private String currencyType;
	private long deletedBy;
	private Date deletedDate;
	private String functionArea;
	private String industryType;
	private Boolean isDeleted;
	private String jobDescription;
	private String jobTitle;
	private String keywords;
	private String jobLocation;
	private String maxSalary;
	private String minSalary;
	private String pgQualification;
	private String otherSalaryDetails;
	private String ugQualification;
	private Long noVacancies;
	private String maxExp;
	private String minExp;
	private String jobResponse;
	private Boolean isActive;
	
	

	private Date startDate;
	private Date endDate;

	private String postedBy;

	@Id
	@GeneratedValue
	@Column(name = "job_id", unique = true, nullable = false)
	public long getJobId() {
		return this.jobId;
	}

	public void setJobId(long jobId) {
		this.jobId = jobId;
	}

	@ManyToOne(fetch=FetchType.LAZY)  
	@JoinColumn(name = "emp_id")
	public EmployerLoginVO getEmployerLogin() {
		return this.employerLogin;
	}

	public void setEmployerLogin(EmployerLoginVO employerLogin) {
		this.employerLogin = employerLogin;
	}

	@Field(index = Index.YES, analyze = Analyze.YES, store = Store.NO)
	@Column(name = "address")
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@Field(index = Index.YES, analyze = Analyze.YES, store = Store.NO)
	@Column(name = "company_name")
	public String getCompanyName() {
		return this.companyName;
	}

	public void setCompanyName(String companyName) {
		this.companyName = companyName;
	}

	@Field(index = Index.YES, analyze = Analyze.YES, store = Store.NO)
	@Column(name = "contact_person")
	public String getContactPerson() {
		return this.contactPerson;
	}

	public void setContactPerson(String contactPerson) {
		this.contactPerson = contactPerson;
	}

	@Field(index = Index.YES, analyze = Analyze.YES, store = Store.NO)
	@Column(name = "contact_no")
	public Long getContactNo() {
		return this.contactNo;
	}

	public void setContactNo(Long contactNo) {
		this.contactNo = contactNo;
	}

	@Field(index = Index.YES, analyze = Analyze.YES, store = Store.NO)
	@Column(name = "currency_type")
	public String getCurrencyType() {
		return this.currencyType;
	}

	public void setCurrencyType(String currencyType) {
		this.currencyType = currencyType;
	}

	@Column(name = "deleted_by", nullable = false)
	public long getDeletedBy() {
		return this.deletedBy;
	}

	public void setDeletedBy(long deletedBy) {
		this.deletedBy = deletedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "deleted_date")
	public Date getDeletedDate() {
		return this.deletedDate;
	}

	public void setDeletedDate(Date deletedDate) {
		this.deletedDate = deletedDate;
	}

	@Field(index = Index.YES, analyze = Analyze.YES, store = Store.NO)
	@Column(name = "function_area")
	public String getFunctionArea() {
		return this.functionArea;
	}

	public void setFunctionArea(String functionArea) {
		this.functionArea = functionArea;
	}

	@Field(index = Index.YES, analyze = Analyze.YES, store = Store.NO)
	@Column(name = "industry_type")
	public String getIndustryType() {
		return this.industryType;
	}

	public void setIndustryType(String industryType) {
		this.industryType = industryType;
	}

	@Field(index = Index.YES, analyze = Analyze.YES, store = Store.NO)
	@Column(name = "is_deleted")
	public Boolean getIsDeleted() {
		return this.isDeleted;
	}

	public void setIsDeleted(Boolean isDeleted) {
		this.isDeleted = isDeleted;
	}

	@Field(index = Index.YES, analyze = Analyze.YES, store = Store.NO)
	@Column(name = "job_description")
	public String getJobDescription() {
		return this.jobDescription;
	}

	public void setJobDescription(String jobDescription) {
		this.jobDescription = jobDescription;
	}

	@Field(index = Index.YES, analyze = Analyze.YES, store = Store.NO)
	@Column(name = "job_title")
	public String getJobTitle() {
		return this.jobTitle;
	}

	public void setJobTitle(String jobTitle) {
		this.jobTitle = jobTitle;
	}

	@Field(index = Index.YES, analyze = Analyze.YES, store = Store.NO)
	@Column(name = "keywords")
	public String getKeywords() {
		return this.keywords;
	}

	public void setKeywords(String keywords) {
		this.keywords = keywords;
	}

	@Field(index = Index.YES, analyze = Analyze.YES, store = Store.NO)
	@Column(name = "job_location")
	public String getJobLocation() {
		return this.jobLocation;
	}

	public void setJobLocation(String jobLocation) {
		this.jobLocation = jobLocation;
	}

	@Field(index = Index.YES, analyze = Analyze.YES, store = Store.NO)
	@Column(name = "max_salary")
	public String getMaxSalary() {
		return this.maxSalary;
	}

	public void setMaxSalary(String maxSalary) {
		this.maxSalary = maxSalary;
	}

	@Field(index = Index.YES, analyze = Analyze.YES, store = Store.NO)
	@Column(name = "min_salary")
	public String getMinSalary() {
		return this.minSalary;
	}

	public void setMinSalary(String minSalary) {
		this.minSalary = minSalary;
	}

	@Field(index = Index.YES, analyze = Analyze.YES, store = Store.NO)
	@Column(name = "pg_qualification")
	public String getPgQualification() {
		return this.pgQualification;
	}

	public void setPgQualification(String pgQualification) {
		this.pgQualification = pgQualification;
	}

	@Field(index = Index.YES, analyze = Analyze.YES, store = Store.NO)
	@Column(name = "job_type")
	public String getOtherSalaryDetails() {
		return this.otherSalaryDetails;
	}

	public void setOtherSalaryDetails(String otherSalaryDetails) {
		this.otherSalaryDetails = otherSalaryDetails;
	}

	@Field(index = Index.YES, analyze = Analyze.YES, store = Store.NO)
	@Column(name = "ug_qualification")
	public String getUgQualification() {
		return this.ugQualification;
	}

	public void setUgQualification(String ugQualification) {
		this.ugQualification = ugQualification;
	}

	@Field(index = Index.YES, analyze = Analyze.YES, store = Store.NO)
	@Column(name = "no_vacancies")
	public Long getNoVacancies() {
		return this.noVacancies;
	}

	public void setNoVacancies(Long noVacancies) {
		this.noVacancies = noVacancies;
	}

	@Field(index = Index.YES, analyze = Analyze.YES, store = Store.NO)
	@Column(name = "max_exp", nullable = false)
	public String getMaxExp() {
		return this.maxExp;
	}

	public void setMaxExp(String maxExp) {
		this.maxExp = maxExp;
	}

	@Field(index = Index.YES, analyze = Analyze.YES, store = Store.NO)
	@Column(name = "min_exp")
	public String getMinExp() {
		return this.minExp;
	}

	public void setMinExp(String minExp) {
		this.minExp = minExp;
	}

	@Field(index = Index.YES, analyze = Analyze.YES, store = Store.NO)
	@Column(name = "is_active")
	public Boolean getIsActive() {
		return this.isActive;
	}

	public void setIsActive(Boolean isActive) {
		this.isActive = isActive;
	}

	/**
	 * @return the jobResponse
	 */
	@Field(index = Index.YES, analyze = Analyze.YES, store = Store.NO)
	@Column(name = "job_seeker_response")
	public String getJobResponse() {
		return this.jobResponse;
	}

	/**
	 * @param jobResponse
	 *            the jobResponse to set
	 */
	public void setJobResponse(String jobResponse) {
		this.jobResponse = jobResponse;
	}

	

	/**
	 * @return the postedBy
	 */
	public String getPostedBy() {
		return this.postedBy;
	}

	/**
	 * @param postedBy
	 *            the postedBy to set
	 */
	public void setPostedBy(String postedBy) {
		this.postedBy = postedBy;
	}

	@Field(index = Index.YES, analyze = Analyze.YES, store = Store.NO)
	@DateBridge(resolution = Resolution.DAY)
	public Date getStartDate() {
		return this.startDate;
	}

	public void setStartDate(Date startDate) {
		this.startDate = startDate;
	}

	@Field(index = Index.YES, analyze = Analyze.YES, store = Store.NO)
	@DateBridge(resolution = Resolution.DAY)
	public Date getEndDate() {
		return this.endDate;
	}

	public void setEndDate(Date endDate) {
		this.endDate = endDate;
	}

	

	
	/**
	 * @return the employerRegistionVO
	 */
	@ManyToOne(fetch=FetchType.LAZY)
	@JoinColumn(name = "profileId")
	public EmployerProfileVO getEmployerProfileVO() {
		return employerProfileVO;
	}

	/**
	 * @param employerRegistionVO the employerRegistionVO to set
	 */
	public void setEmployerProfileVO(EmployerProfileVO employerVO) {
		this.employerProfileVO = employerVO;
	}
	@Column(name = "companyId")
	public long getCompanyId() {
		return companyId;
	}

	public void setCompanyId(long companyId) {
		this.companyId = companyId;
	}
}
