package com.myjobkart.vo;

// Generated 5 Feb, 2015 10:16:28 AM by Hibernate Tools 4.0.0

import java.sql.Blob;
import java.util.Date;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Embeddable;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.apache.lucene.analysis.WhitespaceAnalyzer;
import org.hibernate.search.annotations.Analyze;
import org.hibernate.search.annotations.Analyzer;
import org.hibernate.search.annotations.DateBridge;
import org.hibernate.search.annotations.Field;
import org.hibernate.search.annotations.Index;
import org.hibernate.search.annotations.Indexed;
import org.hibernate.search.annotations.Resolution;
import org.hibernate.search.annotations.Store;

/**
 * JobSeekerProfile generated by hbm2java
 */

@Entity
@Indexed
@Table(name = "jobseeker_profile")
public class JobseekerProfileVO extends BasicEntity {

	private static final long serialVersionUID = 1L;

	private long profileId;
	CompanyVO retriveCompanyId;
	private JobseekerLoginVO jobSeekerLogin;
	private JobseekerVO jobSeekerRegistration;
	@Column(name = "firstName")
	private String firstName;
	@Column(name = "lastName")
	private String lastName;
	@Column(name = "profileImage")
	private Blob profileImage;
	@Column(name = "maritalStatus")
	private String maritalStatus;
	@Column(name = "gender")
	private String gender;
	@Column(name = "location")
	private String location;
	@Column(name = "languagesKnown")
	private String languagesKnown;
	@Column(name = "phone")
	private Long phone;
	@Column(name = "nationality")
	private String nationality;
	@Column(name = "jobType")
	private String jobType;
	@Column(name = "currentIndustry")
	private String currentIndustry;
	@Column(name = "function")
	private String function;
	@Column(name = "keySkills")
	private String keySkills;
	@Column(name = "domainSkills")
	private String domainSkills;
	@Column(name = "specialisation")
	private Long currentSalary;
	@Column(name="noOfExperience")
	private Long noOfExperience;

	

	private int experienceInMonth;
	private String resumeTitle;
	private Blob uploadResume;
	private String preferredIndustry;
	private String preferredLocation;
	private Long expectedCtc;
	private String address;
	private String emailId;
	private Boolean isDelete;
	private Date deletedDate;
	private long deleteBy;
	private Boolean isActive;

	private int experienceInYear;
	private String profiledescription;
	private List<JobseekerEducationVO> jobseekerEducationVO;
	private List<JobseekerProfessionalVO> JobseekerProfessionalVO;

	@Column(name = "profile_descriptions")
	private String profileDescriptions;

	/**
	 * @return the pincode
	 */
	public Long getPincode() {
		return pincode;
	}

	/**
	 * @param pincode
	 *            the pincode to set
	 */
	public void setPincode(Long pincode) {
		this.pincode = pincode;
	}

	/**
	 * @return the state
	 */
	public String getState() {
		return state;
	}

	/**
	 * @param state
	 *            the state to set
	 */
	public void setState(String state) {
		this.state = state;
	}

	private Long pincode;
	private String state;

	/**
	 * @return the firstName
	 */
	@Field(index = Index.YES, analyze = Analyze.YES, store = Store.NO)
	public String getFirstName() {
		return this.firstName;
	}

	/**
	 * @return the jbprofileId
	 */
	@Id
	@GeneratedValue
	public long getprofileId() {
		return this.profileId;
	}

	/**
	 * @param jbprofileId
	 *            the jbprofileId to set
	 */
	public void setprofileId(long profileId) {
		this.profileId = profileId;
	}

	/**
	 * @param firstName
	 *            the firstName to set
	 */
	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	/**
	 * @return the lastName
	 */
	@Field(index = Index.YES, analyze = Analyze.YES, store = Store.NO)
	public String getLastName() {
		return this.lastName;
	}

	/**
	 * @param lastName
	 *            the lastName to set
	 */
	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	/**
	 * @return the profileImage
	 */

	public Blob getProfileImage() {
		return this.profileImage;
	}

	/**
	 * @param profileImage
	 *            the profileImage to set
	 */
	public void setProfileImage(Blob profileImage) {
		this.profileImage = profileImage;
	}

	/**
	 * @return the maritalStatus
	 */
	@Field(index = Index.YES, analyze = Analyze.YES, store = Store.NO)
	public String getMaritalStatus() {
		return this.maritalStatus;
	}

	/**
	 * @param maritalStatus
	 *            the maritalStatus to set
	 */
	public void setMaritalStatus(String maritalStatus) {
		this.maritalStatus = maritalStatus;
	}

	/**
	 * @return the gender
	 */
	@Field(index = Index.YES, analyze = Analyze.YES, store = Store.NO)
	public String getGender() {
		return this.gender;
	}

	/**
	 * @param gender
	 *            the gender to set
	 */
	public void setGender(String gender) {
		this.gender = gender;
	}

	/**
	 * @return the location
	 */
	@Field(index = Index.YES, analyze = Analyze.YES, store = Store.NO)
	public String getLocation() {
		return this.location;
	}

	/**
	 * @param location
	 *            the location to set
	 */
	public void setLocation(String location) {
		this.location = location;
	}

	/**
	 * @return the languagesKYESwn
	 */
	@Field(index = Index.YES, analyze = Analyze.YES, store = Store.NO)
	public String getLanguagesKnown() {
		return this.languagesKnown;
	}

	/**
	 * @param languagesKnown
	 *            the languagesKnown to set
	 */
	public void setLanguagesKnown(String languagesKnown) {
		this.languagesKnown = languagesKnown;
	}

	/**
	 * @return the phone
	 */
	@Field(index = Index.YES, analyze = Analyze.YES, store = Store.NO)
	public Long getPhone() {
		return this.phone;
	}

	/**
	 * @param phone
	 *            the phone to set
	 */
	public void setPhone(Long phone) {
		this.phone = phone;
	}

	/**
	 * @return the nationality
	 */
	@Field(index = Index.YES, analyze = Analyze.YES, store = Store.NO)
	public String getNationality() {
		return this.nationality;
	}

	/**
	 * @param nationality
	 *            the nationality to set
	 */
	public void setNationality(String nationality) {
		this.nationality = nationality;
	}

	/**
	 * @return the jobType
	 */
	@Field(index = Index.YES, analyze = Analyze.YES, store = Store.NO)
	public String getJobType() {
		return this.jobType;
	}

	/**
	 * @param jobType
	 *            the jobType to set
	 */

	public void setJobType(String jobType) {
		this.jobType = jobType;
	}

	/**
	 * @return the currentIndustry
	 */
	@Field(index = Index.YES, analyze = Analyze.YES, store = Store.NO)
	public String getCurrentIndustry() {
		return this.currentIndustry;
	}

	/**
	 * @param currentIndustry
	 *            the currentIndustry to set
	 */
	public void setCurrentIndustry(String currentIndustry) {
		this.currentIndustry = currentIndustry;
	}

	/**
	 * @return the function
	 */
	@Field(index = Index.YES, analyze = Analyze.YES, store = Store.NO)
	public String getFunction() {
		return this.function;
	}

	/**
	 * @param function
	 *            the function to set
	 */

	public void setFunction(String function) {
		this.function = function;
	}

	/**
	 * @return the keySkills
	 */
	@Field(index = Index.YES, analyze = Analyze.YES, store = Store.NO)
	public String getKeySkills() {
		return this.keySkills;
	}

	/**
	 * @param keySkills
	 *            the keySkills to set
	 */
	public void setKeySkills(String keySkills) {
		this.keySkills = keySkills;
	}

	/**
	 * @return the domainSkills
	 */
	@Field(index = Index.YES, analyze = Analyze.YES, store = Store.NO)
	public String getDomainSkills() {
		return this.domainSkills;
	}

	/**
	 * @param domainSkills
	 *            the domainSkills to set
	 */
	public void setDomainSkills(String domainSkills) {
		this.domainSkills = domainSkills;
	}

	/**
	 * @return the currentSalary
	 */
	@Field(index = Index.YES, analyze = Analyze.YES, store = Store.NO)
	public Long getCurrentSalary() {
		return currentSalary;
	}

	/**
	 * @param currentSalary
	 *            the currentSalary to set
	 */
	public void setCurrentSalary(Long currentSalary) {
		this.currentSalary = currentSalary;
	}

	/**
	 * @return the experienceInMonth
	 */
	@Field(index = Index.YES, analyze = Analyze.YES, store = Store.NO)
	public int getExperienceInMonth() {
		return this.experienceInMonth;
	}

	/**
	 * @param experienceInMonth
	 *            the experienceInMonth to set
	 */
	public void setExperienceInMonth(int experienceInMonth) {
		this.experienceInMonth = experienceInMonth;
	}

	/**
	 * @return the resumeTitle
	 */
	@Field(index = Index.YES, analyze = Analyze.YES, store = Store.NO)
	@Column(name = "profileTitle")
	public String getResumeTitle() {
		return this.resumeTitle;
	}

	/**
	 * @param resumeTitle
	 *            the resumeTitle to set
	 */
	public void setResumeTitle(String resumeTitle) {
		this.resumeTitle = resumeTitle;
	}

	/**
	 * @return the uploadResume
	 */
	public Blob getUploadResume() {
		return this.uploadResume;
	}

	/**
	 * @param uploadResume
	 *            the uploadResume to set
	 */
	public void setUploadResume(Blob uploadResume) {
		this.uploadResume = uploadResume;
	}

	/**
	 * @return the preferredIndustry
	 */
	@Field(index = Index.YES, analyze = Analyze.YES, store = Store.NO)
	public String getPreferredIndustry() {
		return this.preferredIndustry;
	}

	/**
	 * @param preferredIndustry
	 *            the preferredIndustry to set
	 */
	public void setPreferredIndustry(String preferredIndustry) {
		this.preferredIndustry = preferredIndustry;
	}

	/**
	 * @return the preferredLocation
	 */
	@Field(index = Index.YES, analyze = Analyze.YES, store = Store.NO)
	public String getPreferredLocation() {
		return this.preferredLocation;
	}

	/**
	 * @param preferredLocation
	 *            the preferredLocation to set
	 */
	public void setPreferredLocation(String preferredLocation) {
		this.preferredLocation = preferredLocation;
	}

	/**
	 * @return the jobSeekerLogin
	 */
	@ManyToOne(fetch=FetchType.LAZY)
	@JoinColumn(name = "jb_id")
	public JobseekerLoginVO getJobSeekerLogin() {
		return this.jobSeekerLogin;
	}

	/**
	 * @param jobSeekerLogin
	 *            the jobSeekerLogin to set
	 */
	public void setJobSeekerLogin(JobseekerLoginVO jobSeekerLogin) {
		this.jobSeekerLogin = jobSeekerLogin;
	}
	
	/**
	 * @return the jobSeekerRegistration
	 */
	@OneToOne(cascade = CascadeType.PERSIST,fetch=FetchType.LAZY)
	@JoinColumn(name = "jbReg_id")
	public JobseekerVO getJobSeekerRegistration() {
		return jobSeekerRegistration;
	}

	/**
	 * @param jobSeekerRegistration the jobSeekerRegistration to set
	 */
	public void setJobSeekerRegistration(JobseekerVO jobSeekerRegistration) {
		this.jobSeekerRegistration = jobSeekerRegistration;
	}

	/**
	 * @return the emailId
	 */
	@Field(index = Index.YES, analyze = Analyze.YES, store = Store.NO)
	@Analyzer(impl = WhitespaceAnalyzer.class)
	public String getEmailId() {
		return this.emailId;
	}

	/**
	 * @param emailId
	 *            the emailId to set
	 */
	public void setEmailId(String emailId) {
		this.emailId = emailId;
	}

	/**
	 * @return the isDelete
	 */
	public Boolean getIsDelete() {
		return this.isDelete;
	}

	/**
	 * @param isDelete
	 *            the isDelete to set
	 */
	public void setIsDelete(Boolean isDelete) {
		this.isDelete = isDelete;
	}

	/**
	 * @return the deletedDate
	 */
	@Temporal(TemporalType.TIMESTAMP)
	public Date getDeletedDate() {
		return this.deletedDate;
	}

	/**
	 * @param deletedDate
	 *            the deletedDate to set
	 */
	public void setDeletedDate(Date deletedDate) {
		this.deletedDate = deletedDate;
	}

	/**
	 * @return the deleteBy
	 */
	public long getDeleteBy() {
		return this.deleteBy;
	}

	/**
	 * @param deleteBy
	 *            the deleteBy to set
	 */
	public void setDeleteBy(long deleteBy) {
		this.deleteBy = deleteBy;
	}

	/**
	 * @return the experienceInYear
	 */
	@Field(index = Index.YES, analyze = Analyze.YES, store = Store.NO)
	public int getExperienceInYear() {
		return this.experienceInYear;
	}

	/**
	 * @param experienceInYear
	 *            the experienceInYear to set
	 */
	public void setExperienceInYear(int experienceInYear) {
		this.experienceInYear = experienceInYear;
	}

	/**
	 * @return the profiledescription
	 */
	@Field(index = Index.YES, analyze = Analyze.YES, store = Store.NO)
	public String getProfiledescription() {
		return this.profiledescription;
	}

	/**
	 * @param profiledescription
	 *            the profiledescription to set
	 */
	public void setProfiledescription(String profiledescription) {
		this.profiledescription = profiledescription;
	}

	/**
	 * @return the isActive
	 */
	@Field(index = Index.YES, analyze = Analyze.YES, store = Store.NO)
	public Boolean getIsActive() {
		return this.isActive;
	}

	/**
	 * @param isActive
	 *            the isActive to set
	 */
	public void setIsActive(Boolean isActive) {
		this.isActive = isActive;
	}

	@Field(index = Index.YES, analyze = Analyze.YES, store = Store.NO)
	public String getAddress() {
		return address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@OneToMany(cascade = CascadeType.ALL,fetch=FetchType.LAZY)
	@JoinTable(name = "jobseeker_education_group", joinColumns = { @JoinColumn(name = "profileId") }, inverseJoinColumns = { @JoinColumn(name = "educationId") })
	public List<JobseekerEducationVO> getJobseekerEducationVO() {
		return jobseekerEducationVO;
	}

	/**
	 * @param jobseekerEducationVO
	 *            the jobseekerEducationVO to set
	 */

	public void setJobseekerEducationVO(
			List<JobseekerEducationVO> jobseekerEducationVO) {
		this.jobseekerEducationVO = jobseekerEducationVO;
	}

	/**
	 * @return the jobseekerProfessionalVO
	 */
	@OneToMany(cascade = CascadeType.ALL,fetch=FetchType.LAZY)
	@JoinTable(name = "jobseeker_professional_group", joinColumns = { @JoinColumn(name = "profileId") }, inverseJoinColumns = { @JoinColumn(name = "professionalId") })
	public List<JobseekerProfessionalVO> getJobseekerProfessionalVO() {
		return JobseekerProfessionalVO;
	}

	/**
	 * @param jobseekerProfessionalVO
	 *            the jobseekerProfessionalVO to set
	 */
	public void setJobseekerProfessionalVO(
			List<JobseekerProfessionalVO> jobseekerProfessionalVO) {
		JobseekerProfessionalVO = jobseekerProfessionalVO;
	}

	/**
	 * @return the expectedCtc
	 */
	@Field(index = Index.YES, analyze = Analyze.YES, store = Store.NO)
	public Long getExpectedCtc() {
		return expectedCtc;
	}

	/**
	 * @param expectedCtc
	 *            the expectedCtc to set
	 */
	public void setExpectedCtc(Long expectedCtc) {
		this.expectedCtc = expectedCtc;
	}

	/**
	 * @return the profileDescriptions
	 */
	public String getProfileDescriptions() {
		return profileDescriptions;
	}

	/**
	 * @param profileDescriptions
	 *            the profileDescriptions to set
	 */
	public void setProfileDescriptions(String profileDescriptions) {
		this.profileDescriptions = profileDescriptions;
	}
	
	
	
	public Long getNoOfExperience() {
		return noOfExperience;
	}

	public void setNoOfExperience(Long noOfExperience) {
		this.noOfExperience = noOfExperience;
	}
	
	
}
